# -*- coding: utf-8 -*-
"""Another copy of final ids

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G7Kpq4GLWFcgOI-3vEHJUIxTVmwBL3Ge
"""

import pandas as pd
import numpy as np

!wget https://raw.githubusercontent.com/defcom17/NSL_KDD/master/KDDTrain+.csv

df = pd.read_csv('KDDTrain+.csv')

df.head()

columns = (['duration'
,'protocol_type'
,'service'
,'flag'
,'src_bytes'
,'dst_bytes'
,'land'
,'wrong_fragment'
,'urgent'
,'hot'
,'num_failed_logins'
,'logged_in'
,'num_compromised'
,'root_shell'
,'su_attempted'
,'num_root'
,'num_file_creations'
,'num_shells'
,'num_access_files'
,'num_outbound_cmds'
,'is_host_login'
,'is_guest_login'
,'count'
,'srv_count'
,'serror_rate'
,'srv_serror_rate'
,'rerror_rate'
,'srv_rerror_rate'
,'same_srv_rate'
,'diff_srv_rate'
,'srv_diff_host_rate'
,'dst_host_count'
,'dst_host_srv_count'
,'dst_host_same_srv_rate'
,'dst_host_diff_srv_rate'
,'dst_host_same_src_port_rate'
,'dst_host_srv_diff_host_rate'
,'dst_host_serror_rate'
,'dst_host_srv_serror_rate'
,'dst_host_rerror_rate'
,'dst_host_srv_rerror_rate'
,'attack'
,'level'])
df.columns = columns

df.head()

df.info()

df.isnull().sum().sum()

df.describe().T

cols=['protocol_type','service','flag','attack']
for col in cols:
  print(f'{col}: {df[col].unique()}')

from sklearn import preprocessing
le=preprocessing.LabelEncoder()
clm=['protocol_type', 'service', 'flag', 'attack']
for x in clm:
    df[x]=le.fit_transform(df[x])

df_scaled=pd.DataFrame(df,columns=columns)

from sklearn.model_selection import train_test_split
x=df[['flag',
    'land',
    'wrong_fragment',
    'logged_in',
    'count',
    'serror_rate',
    'srv_serror_rate',
    'same_srv_rate',
    'dst_host_srv_count',
    'dst_host_same_srv_rate',
    'dst_host_srv_diff_host_rate',
    'dst_host_serror_rate',
    'dst_host_srv_serror_rate'
    ]]
y=df['attack']
X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

X_train.head()

train_index=X_train.columns
train_index

selected_features = [
    'flag',
    'land',
    'wrong_fragment',
    'logged_in',
    'count',
    'serror_rate',
    'srv_serror_rate',
    'same_srv_rate',
    'dst_host_srv_count',
    'dst_host_same_srv_rate',
    'dst_host_srv_diff_host_rate',
    'dst_host_serror_rate',
    'dst_host_srv_serror_rate',
    'level'
]
selected_features=pd.DataFrame(selected_features)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

rf = RandomForestClassifier(n_estimators=100,max_depth=1000 )
rf.fit(X_train, y_train)

y_pred = rf.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))

print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

import joblib
joblib.dump(rf, 'ids_model.pkl')
joblib.dump(le, 'label_encoder.pkl')
joblib.dump(selected_features, 'selected_features.pkl')